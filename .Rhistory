knitr::opts_chunk$set(echo = TRUE)
# Reading the csv data into a dataframe
hotelData <- read_csv("https://intro-datascience.s3.us-east-2.amazonaws.com/Resort01.csv")
# importing required libraries
library(tidyverse)
library(caret)
library(dplyr)
library(ggplot2)
library(e1071)
library(kernlab)
library(arules)
library(arulesViz)
library(maps)
library(ggmap)
library(mapproj)
library(rworldmap)
# plotting Stacked bar graph 'DepositType' Vs 'IsCanceled'
ggplot(hotelData, aes(x=factor(DepositType), fill=factor(IsCanceled))) +
geom_bar(position="dodge") +labs(x="DepositType",y="Count")+
scale_fill_discrete(name="IsCanceled", labels=c("Not canceled", "Canceled"))
knitr::opts_chunk$set(echo = TRUE)
# importing required libraries
library(tidyverse)
library(caret)
library(dplyr)
library(ggplot2)
library(e1071)
library(kernlab)
library(arules)
library(arulesViz)
library(maps)
library(ggmap)
library(mapproj)
library(rworldmap)
install.packages("rworldmap")
knitr::opts_chunk$set(echo = TRUE)
# importing required libraries
library(tidyverse)
library(caret)
library(dplyr)
library(ggplot2)
library(e1071)
library(kernlab)
library(arules)
library(arulesViz)
library(maps)
library(ggmap)
library(mapproj)
library(rworldmap)
library(rpart)
# Reading the csv data into a dataframe
hotelData <- read_csv("https://intro-datascience.s3.us-east-2.amazonaws.com/Resort01.csv")
# exploring structure of the data
str(hotelData)
# importing required libraries
library(tidyverse)
library(caret)
library(dplyr)
library(ggplot2)
library(e1071)
library(kernlab)
library(arules)
library(arulesViz)
library(maps)
library(ggmap)
library(mapproj)
library(rworldmap)
library(rpart)
# importing required libraries
library(tidyverse)
library(caret)
library(dplyr)
library(ggplot2)
library(e1071)
library(kernlab)
library(arules)
library(arulesViz)
library(maps)
library(ggmap)
library(mapproj)
library(rworldmap)
library(rpart)
sample1 <- hotelData %>% filter(hotelData$IsCanceled == 1)
sample2 <- hotelData %>% filter(hotelData$IsCanceled == 0)
other_table <- table(sample1$MarketSegment, sample1$DepositType)
other_table1 <- table(sample1$AssignedRoomType, sample1$MarketSegment)
barplot(other_table,
main = "MarketSegment for Deposit Type when there are cancelations",
xlab = "IsCancelled", ylab = "Frequency",
col = c("cyan", "red", "green", "blue", "yellow","orange"),
legend.text = rownames(other_table),
beside = TRUE)
other_table1
other_table
barplot(other_table1,
main = "MarketSegment for Assigned room type",
xlab = "MarketSegment", ylab = "Frequency",
col = c("cyan", "red", "green", "blue", "yellow","orange","brown","darkblue","pink","purple","cornsilk3"),
legend.text = rownames(other_table1),
beside = TRUE) # Grouped bars
barplot(other_table1,
main = "MarketSegment for Assigned room type",
xlab = "MarketSegment", ylab = "Frequency",
col = c("cyan", "red", "green", "blue", "yellow","orange","brown","darkblue","pink","purple","cornsilk3"),
legend.text = rownames(other_table1),
beside = TRUE) # Grouped bars
#creating new data frame with top 10 countries who are cancelling the most
hotelData_country$LeadTime=hotelData$LeadTime
#creating new data frame with top 10 countries who are cancelling the most
hotelData_country <- hotelData
hotelData_country$LeadTime=hotelData$LeadTime
hotelData_country$IsCanceled=hotelData$IsCanceled
hotelData_country$MarketSegment=hotelData$MarketSegment
hotelData_country$RequiredCarParkingSpaces=hotelData$RequiredCarParkingSpaces
hotelData_country$DepositType=hotelData$DepositType
hotelData_country$CustomerType=hotelData$CustomerType
hotelData_country$StaysInWeekendNights=hotelData$StaysInWeekendNights
hotelData_country$StaysInWeekNight=hotelData$StaysInWeekNights
hotelData_country$Adults=hotelData$Adults
hotelData_country$Children=hotelData$Children
hotelData_country$Babies=hotelData$Babies
hotelData_country$Counry=hotelData$Country
# unique home countries of customers
hotelData_country %>% unique()
# top 10 countries
country_count10<-country_count[1:10,]
#creating new data frame with top 10 countries who are cancelling the most
hotelData_country <- hotelData
hotelData_country$LeadTime=hotelData$LeadTime
hotelData_country$IsCanceled=hotelData$IsCanceled
hotelData_country$MarketSegment=hotelData$MarketSegment
hotelData_country$RequiredCarParkingSpaces=hotelData$RequiredCarParkingSpaces
hotelData_country$DepositType=hotelData$DepositType
hotelData_country$CustomerType=hotelData$CustomerType
hotelData_country$StaysInWeekendNights=hotelData$StaysInWeekendNights
hotelData_country$StaysInWeekNight=hotelData$StaysInWeekNights
hotelData_country$Adults=hotelData$Adults
hotelData_country$Children=hotelData$Children
hotelData_country$Babies=hotelData$Babies
hotelData_country$Counry=hotelData$Country
# unique home countries of customers
hotelData_country %>% unique()
#factorizing "RequiredCarParkingSpaces" categorical variable
hotelData_country$RequiredCarParkingSpaces<-as.factor(hotelData_country$RequiredCarParkingSpaces)
# creating new data frame for top countries
hotelData_top10countries<-filter(hotelData_country, (country == 'PRT' | country == 'GBR' | country == 'ESP' |
country == 'IRL' | country == 'FRA' | country == 'DEU' | country == 'CN' |
country == 'NLD' | country == 'USA'  ))
#creating new data frame with top 10 countries who are cancelling the most
hotelData_country <- hotelData
hotelData_country$LeadTime=hotelData$LeadTime
hotelData_country$IsCanceled=hotelData$IsCanceled
hotelData_country$MarketSegment=hotelData$MarketSegment
hotelData_country$RequiredCarParkingSpaces=hotelData$RequiredCarParkingSpaces
hotelData_country$DepositType=hotelData$DepositType
hotelData_country$CustomerType=hotelData$CustomerType
hotelData_country$StaysInWeekendNights=hotelData$StaysInWeekendNights
hotelData_country$StaysInWeekNight=hotelData$StaysInWeekNights
hotelData_country$Adults=hotelData$Adults
hotelData_country$Children=hotelData$Children
hotelData_country$Babies=hotelData$Babies
hotelData_country$Counry=hotelData$Country
# unique home countries of customers
hotelData_country %>% unique()
#factorizing "RequiredCarParkingSpaces" categorical variable
hotelData_country$RequiredCarParkingSpaces<-as.factor(hotelData_country$RequiredCarParkingSpaces)
# creating new data frame for top countries
hotelData_top10countries<- hotelData_country %>% filter(hotelData_country, (country == 'PRT' | country == 'GBR' | country == 'ESP' |
country == 'IRL' | country == 'FRA' | country == 'DEU' | country == 'CN' |
country == 'NLD' | country == 'USA'  ))
#creating new data frame with top 10 countries who are cancelling the most
hotelData_country <- hotelData
hotelData_country$LeadTime=hotelData$LeadTime
hotelData_country$IsCanceled=hotelData$IsCanceled
hotelData_country$MarketSegment=hotelData$MarketSegment
hotelData_country$RequiredCarParkingSpaces=hotelData$RequiredCarParkingSpaces
hotelData_country$DepositType=hotelData$DepositType
hotelData_country$CustomerType=hotelData$CustomerType
hotelData_country$StaysInWeekendNights=hotelData$StaysInWeekendNights
hotelData_country$StaysInWeekNight=hotelData$StaysInWeekNights
hotelData_country$Adults=hotelData$Adults
hotelData_country$Children=hotelData$Children
hotelData_country$Babies=hotelData$Babies
hotelData_country$Counry=hotelData$Country
# unique home countries of customers
hotelData_country %>% unique()
#factorizing "RequiredCarParkingSpaces" categorical variable
hotelData_country$RequiredCarParkingSpaces<-as.factor(hotelData_country$RequiredCarParkingSpaces)
# creating new data frame for top countries
hotelData_top10countries<- hotelData_country %>% filter(country == 'PRT' | country == 'GBR' | country == 'ESP' |
country == 'IRL' | country == 'FRA' | country == 'DEU' | country == 'CN' |
country == 'NLD' | country == 'USA'  )
#creating new data frame with top 10 countries who are cancelling the most
hotelData_country <- hotelData
hotelData_country$LeadTime=hotelData$LeadTime
hotelData_country$IsCanceled=hotelData$IsCanceled
hotelData_country$MarketSegment=hotelData$MarketSegment
hotelData_country$RequiredCarParkingSpaces=hotelData$RequiredCarParkingSpaces
hotelData_country$DepositType=hotelData$DepositType
hotelData_country$CustomerType=hotelData$CustomerType
hotelData_country$StaysInWeekendNights=hotelData$StaysInWeekendNights
hotelData_country$StaysInWeekNight=hotelData$StaysInWeekNights
hotelData_country$Adults=hotelData$Adults
hotelData_country$Children=hotelData$Children
hotelData_country$Babies=hotelData$Babies
hotelData_country$Counry=hotelData$Country
# unique home countries of customers
hotelData_country %>% unique()
#factorizing "RequiredCarParkingSpaces" categorical variable
hotelData_country$RequiredCarParkingSpaces<-as.factor(hotelData_country$RequiredCarParkingSpaces)
# creating new data frame for top countries
hotelData_top10countries<- hotelData_country %>% filter(country == 'PRT' | country == 'GBR' | country == 'ESP' | country == 'IRL' | country == 'FRA' | country == 'DEU' | country == 'CN' |
country == 'NLD' | country == 'USA'  )
#creating new data frame with top 10 countries who are cancelling the most
hotelData_country <- hotelData
hotelData_country$LeadTime=hotelData$LeadTime
hotelData_country$IsCanceled=hotelData$IsCanceled
hotelData_country$MarketSegment=hotelData$MarketSegment
hotelData_country$RequiredCarParkingSpaces=hotelData$RequiredCarParkingSpaces
hotelData_country$DepositType=hotelData$DepositType
hotelData_country$CustomerType=hotelData$CustomerType
hotelData_country$StaysInWeekendNights=hotelData$StaysInWeekendNights
hotelData_country$StaysInWeekNight=hotelData$StaysInWeekNights
hotelData_country$Adults=hotelData$Adults
hotelData_country$Children=hotelData$Children
hotelData_country$Babies=hotelData$Babies
hotelData_country$Counry=hotelData$Country
# unique home countries of customers
hotelData_country %>% unique()
#factorizing "RequiredCarParkingSpaces" categorical variable
hotelData_country$RequiredCarParkingSpaces<-as.factor(hotelData_country$RequiredCarParkingSpaces)
# creating new data frame for top countries
hotelData_top10countries<- hotelData_country %>% filter(Country == 'PRT' | Country == 'GBR' | Country == 'ESP' | Country == 'IRL' | Country == 'FRA' | Country == 'DEU' | Country == 'CN' |
Country == 'NLD' | Country == 'USA'  )
#
ggplot(data = hotelData_top10countries, aes(x = country, fill = IsCanceled)) +
geom_bar(position = "dodge")
#
ggplot(data = hotelData_top10countries, aes(x = Country, fill = IsCanceled)) +
geom_bar(position = "dodge")
ggplot(data = hotelData_top10countries, aes(x = Country, fill = DepositType)) +
geom_bar(position = "dodge")
View(hotelData_top10countries)
#
ggplot(data = hotelData_top10countries, aes(x = Country, fill = IsCanceled)) +
geom_bar(position = "dodge")
#
ggplot(data = hotelData_top10countries, aes(x = Country, fill = LeadTime)) +
geom_bar(position = "dodge")
#
ggplot(data = hotelData_top10countries, aes(x = Country, fill = DepositType)) +
geom_bar(position = "dodge")
#
ggplot(data = hotelData_top10countries, aes(x = Country, fill = IsCanceled)) +
geom_bar(position = "dodge")
#
ggplot(data = hotelData_top10countries, aes(x = Country, fill = as.factor(IsCanceled)) +
geom_bar(position = "dodge")
#
ggplot(data = hotelData_top10countries, aes(x = Country, fill = as.factor(IsCanceled))) +
geom_bar(position = "dodge")
hotelData_top10countries$IsCanceled = as.factor(hotelData_top10countries$IsCanceled)
ggplot(data = hotelData_top10countries, aes(x = Country, fill = IsCanceled)) +
geom_bar(position = "dodge")
newhoteldata_top10countries<-hotelData_top10countries
#observations in top 10 countries having no deposit
newhoteldata_top10countries%>% filter(hotelData_top10countries$DepositType=='No Deposit')
ggplot(data = hotelData_top10countries, aes(x = country, fill = MarketSegment)) +
geom_bar(position = "dodge")
ggplot(data = hotelData_top10countries, aes(x = Country, fill = MarketSegment)) +
geom_bar(position = "dodge")
ggplot(data = hotelData_top10countries, aes(x = country, fill = IsCanceled)) +
geom_bar(position = "dodge")
ggplot(data = hotelData_top10countries, aes(x = Country, fill = IsCanceled)) +
geom_bar(position = "dodge")
ggplot(data = hotelData_top10countries, aes(x = country, fill = RequiredCarParkingSpaces)) +
geom_bar(position = "dodge")
ggplot(data = hotelData_top10countries, aes(x = Country, fill = RequiredCarParkingSpaces)) +
geom_bar(position = "dodge")
ggplot(data = hotelData_top10countries, aes(x = Country, fill = MarketSegment)) +
geom_bar(position = "dodge")
ggplot(data = hotelData_top10countries, aes(x = Country, fill = DepositType)) +
geom_bar(position = "dodge")
ggplot(data = hotelData_top10countries, aes(x = Country, fill = CustomerType)) +
geom_bar(position = "dodge")
ggplot(data = hotelData_top10countries, aes(x = StaysInWeekendNights, fill = CustomerType)) +
geom_bar(position = "dodge")
ggplot(data = hotelData_top10countries, aes(x = StaysInWeekNight, fill = CustomerType)) +
geom_bar(position = "dodge")
ggplot(data = hotelData_top10countries, aes(x = LeadTime,y=StaysInWeekendNights,size = Children)) +
geom_point()
hotelData_top10countries$PeopleCount <- hotelData_top10countries$Adults+
hotelData_top10countries$Children+
hotelData_top10countries$Babies
ggplot(data = hotelData_top10countries, aes(x = country,y=StaysInWeekNight, size = PeopleCount)) +
geom_point()
hotelData_top10countries$PeopleCount <- hotelData_top10countries$Adults+
hotelData_top10countries$Children+
hotelData_top10countries$Babies
ggplot(data = hotelData_top10countries, aes(x = Country,y=StaysInWeekNight, size = PeopleCount)) +
geom_point()
ggplot(data = hotelData_top10countries, aes(x = country,y=StaysInWeekendNights, size = PeopleCount)) +
geom_point()
ggplot(data = hotelData_top10countries, aes(x = Country,y=StaysInWeekendNights, size = PeopleCount)) +
geom_point()
#Map of Lead time for countries
joinData <- joinCountryData2Map( hotelData,
joinCode = "ISO3",
nameJoinColumn = "Country")
theMap <- mapCountryData( joinData, nameColumnToPlot="LeadTime", addLegend=FALSE)
do.call( addMapLegend, c(theMap, legendWidth=1, legendMar = 2))
#converting data frame to factors
hotelData$IsCanceled <- as.factor(hotelData$IsCanceled)
hotelData$Meal <- as.factor(hotelData$Meal)
hotelData$Country <- as.factor(hotelData$Country)
hotelData$MarketSegment <- as.factor(hotelData$MarketSegment)
hotelData$IsRepeatedGuest <- as.factor(hotelData$IsRepeatedGuest)
hotelData$ReservedRoomType <- as.factor(hotelData$ReservedRoomType)
hotelData$AssignedRoomType <- as.factor(hotelData$AssignedRoomType)
hotelData$DepositType <- as.factor(hotelData$DepositType)
hotelData$CustomerType <- as.factor(hotelData$CustomerType)
#converting to transactions
hotelDataTransactions <- as(hotelData, 'transactions')
hotelDataTransactions
#
itemFrequencyPlot(hotelDataTransactions, topN=20)
# creating association rules to find pattern for cancelled booking
#support=0.1 and confidence 0.55
rules1 <- apriori(hotelDataTransactions,
parameter=list(supp=0.1, conf=0.55),
control=list(verbose=F),
appearance=list(default="lhs",rhs=("IsCanceled=1")))
inspect(rules1)
#sorting rules in descending order by lift
top10Lift <- sort(rules1, decreasing = TRUE, na.last = NA, by = "lift")
set.seed(1)
#creating a training data set of only the "IsCanceled" column with partition at 66%
trainList <- createDataPartition(y=hotelData$IsCanceled, p=0.66, list=FALSE)
#str(trainList)
#creating a training data set
trainSet <- hotelData[trainList,]
#creating a testing data set
testSet <- hotelData[-trainList,]
